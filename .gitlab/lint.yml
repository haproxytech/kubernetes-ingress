
tidy:
  stage: lint
  needs: []
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == 'push'
  image:
    name: $CI_REGISTRY_GO/golang:$GO_VERSION
    entrypoint: [""]
  tags:
    - go
  script:
    - go mod tidy
    - test -z "$(git diff 2> /dev/null)" || exit 'Go modules not tidied, issue \`go mod tidy\` and commit the result'
gofumpt:
  stage: lint
  needs: []
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == 'push'
  image:
    name: $CI_REGISTRY_GO/golang:$GO_VERSION
    entrypoint: [""]
  tags:
    - go
  script:
    - make gofumpt
    - test -z "$(git diff 2> /dev/null)" || exit 'Go code not formatted, issue \`make gofumpt\` and commit the result'
golangci_lint:
  stage: lint
  needs: []
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == 'push'
  image:
    name: $CI_REGISTRY_GO/golang:$GO_VERSION
    entrypoint: [""]
  tags:
    - go
  script:
    - make lint-seq
commit-policy:
  stage: lint
  needs: []
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  image:
    name: $CI_REGISTRY_GO/commit-check:5.2.0
    entrypoint: [""]
  tags:
    - go
  script:
      - /check
